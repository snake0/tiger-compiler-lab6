State 1 conflicts: 2 shift/reduce
State 30 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 98 conflicts: 13 shift/reduce
State 99 conflicts: 12 shift/reduce
State 125 conflicts: 12 shift/reduce
State 127 conflicts: 12 shift/reduce
State 141 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | INT
    5    | STRING
    6    | ID LPAREN actuals RPAREN
    7    | exp PLUS exp
    8    | exp MINUS exp
    9    | exp TIMES exp
   10    | exp DIVIDE exp
   11    | exp EQ exp
   12    | exp NEQ exp
   13    | exp LT exp
   14    | exp LE exp
   15    | exp GT exp
   16    | exp GE exp
   17    | MINUS exp
   18    | ID LBRACE rec RBRACE
   19    | LPAREN seq RPAREN
   20    | lvalue ASSIGN exp
   21    | IF exp THEN exp ELSE exp
   22    | IF exp THEN exp
   23    | exp AND exp
   24    | exp OR exp
   25    | WHILE exp DO exp
   26    | FOR ID ASSIGN exp TO exp DO exp
   27    | BREAK
   28    | LET decs IN expseq END
   29    | ID LBRACK exp RBRACK OF exp
   30    | LPAREN exp RPAREN

   31 lvalue: single
   32       | lvalue DOT ID
   33       | lvalue LBRACK exp RBRACK

   34 rec: %empty
   35    | nonempty_rec

   36 nonempty_rec: rec_one
   37             | rec_one COMMA nonempty_rec

   38 rec_one: ID EQ exp

   39 expseq: %empty
   40       | seq_exps

   41 single: ID
   42       | ID DOT ID
   43       | ID LBRACK exp RBRACK

   44 actuals: %empty
   45        | nonempty_args

   46 nonempty_args: exp
   47              | exp COMMA nonempty_args

   48 tydec: tydec_one
   49      | tydec_one tydec

   50 tydec_one: TYPE ID EQ ty

   51 ty: ID
   52   | LBRACE tyfields RBRACE
   53   | ARRAY OF ID

   54 tyfields: %empty
   55         | nonempty_tyfields

   56 fundec: fundec_one
   57       | fundec_one fundec

   58 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   59           | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   60 nonempty_tyfields: ID COLON ID
   61                  | ID COLON ID COMMA nonempty_tyfields

   62 vardec: VAR ID ASSIGN exp
   63       | VAR ID COLON ID ASSIGN exp

   64 decs: %empty
   65     | nonempty_decs

   66 nonempty_decs: nonempty_decs_s decs

   67 nonempty_decs_s: tydec
   68                | vardec
   69                | fundec

   70 seq: %empty
   71    | exp SEMICOLON seq_exps

   72 seq_exps: exp
   73         | exp SEMICOLON seq_exps


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 18 26 29 32 38 41 42 43 50 51 53 58 59 60 61 62 63
STRING (259) 5
INT (260) 4
COMMA (261) 37 47 61
COLON (262) 59 60 61 63
SEMICOLON (263) 71 73
LPAREN (264) 6 19 30 58 59
RPAREN (265) 6 19 30 58 59
LBRACK (266) 29 33 43
RBRACK (267) 29 33 43
LBRACE (268) 18 52
RBRACE (269) 18 52
DOT (270) 32 42
PLUS (271) 7
MINUS (272) 8 17
TIMES (273) 9
DIVIDE (274) 10
EQ (275) 11 38 50 58 59
NEQ (276) 12
LT (277) 13
LE (278) 14
GT (279) 15
GE (280) 16
AND (281) 23
OR (282) 24
ASSIGN (283) 20 26 62 63
ARRAY (284) 53
IF (285) 21 22
THEN (286) 21 22
ELSE (287) 21
WHILE (288) 25
FOR (289) 26
TO (290) 26
DO (291) 25 26
LET (292) 28
IN (293) 28
END (294) 28
OF (295) 29 53
BREAK (296) 27
NIL (297) 3
FUNCTION (298) 58 59
VAR (299) 62 63
TYPE (300) 50
SHIFT (301)
UMINUS (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
exp (50)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30, on right: 1 7 8 9 10 11 12 13 14 15 16
    17 20 21 22 23 24 25 26 29 30 33 38 43 46 47 58 59 62 63 71 72
    73
lvalue (51)
    on left: 31 32 33, on right: 2 20 32 33
rec (52)
    on left: 34 35, on right: 18
nonempty_rec (53)
    on left: 36 37, on right: 35 37
rec_one (54)
    on left: 38, on right: 36 37
expseq (55)
    on left: 39 40, on right: 28
single (56)
    on left: 41 42 43, on right: 31
actuals (57)
    on left: 44 45, on right: 6
nonempty_args (58)
    on left: 46 47, on right: 45 47
tydec (59)
    on left: 48 49, on right: 49 67
tydec_one (60)
    on left: 50, on right: 48 49
ty (61)
    on left: 51 52 53, on right: 50
tyfields (62)
    on left: 54 55, on right: 52 58 59
fundec (63)
    on left: 56 57, on right: 57 69
fundec_one (64)
    on left: 58 59, on right: 56 57
nonempty_tyfields (65)
    on left: 60 61, on right: 55 61
vardec (66)
    on left: 62 63, on right: 68
decs (67)
    on left: 64 65, on right: 28 66
nonempty_decs (68)
    on left: 66, on right: 65
nonempty_decs_s (69)
    on left: 67 68 69, on right: 66
seq (70)
    on left: 70 71, on right: 19
seq_exps (71)
    on left: 72 73, on right: 40 71 73


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14
    single   go to state 15


State 1

    6 exp: ID . LPAREN actuals RPAREN
   18    | ID . LBRACE rec RBRACE
   29    | ID . LBRACK exp RBRACK OF exp
   41 single: ID .
   42       | ID . DOT ID
   43       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 16
    LBRACK  shift, and go to state 17
    LBRACE  shift, and go to state 18
    DOT     shift, and go to state 19

    LBRACK    [reduce using rule 41 (single)]
    DOT       [reduce using rule 41 (single)]
    $default  reduce using rule 41 (single)


State 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


State 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


State 4

   19 exp: LPAREN . seq RPAREN
   30    | LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 70 (seq)

    exp     go to state 20
    lvalue  go to state 14
    single  go to state 15
    seq     go to state 21


State 5

   17 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 22
    lvalue  go to state 14
    single  go to state 15


State 6

   21 exp: IF . exp THEN exp ELSE exp
   22    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 23
    lvalue  go to state 14
    single  go to state 15


State 7

   25 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 24
    lvalue  go to state 14
    single  go to state 15


State 8

   26 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 25


State 9

   28 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 64 (decs)

    tydec            go to state 29
    tydec_one        go to state 30
    fundec           go to state 31
    fundec_one       go to state 32
    vardec           go to state 33
    decs             go to state 34
    nonempty_decs    go to state 35
    nonempty_decs_s  go to state 36


State 10

   27 exp: BREAK .

    $default  reduce using rule 27 (exp)


State 11

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 37


State 13

    1 program: exp .
    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 1 (program)


State 14

    2 exp: lvalue .
   20    | lvalue . ASSIGN exp
   32 lvalue: lvalue . DOT ID
   33       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 50
    DOT     shift, and go to state 51
    ASSIGN  shift, and go to state 52

    $default  reduce using rule 2 (exp)


State 15

   31 lvalue: single .

    $default  reduce using rule 31 (lvalue)


State 16

    6 exp: ID LPAREN . actuals RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 44 (actuals)

    exp            go to state 53
    lvalue         go to state 14
    single         go to state 15
    actuals        go to state 54
    nonempty_args  go to state 55


State 17

   29 exp: ID LBRACK . exp RBRACK OF exp
   43 single: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 56
    lvalue  go to state 14
    single  go to state 15


State 18

   18 exp: ID LBRACE . rec RBRACE

    ID  shift, and go to state 57

    $default  reduce using rule 34 (rec)

    rec           go to state 58
    nonempty_rec  go to state 59
    rec_one       go to state 60


State 19

   42 single: ID DOT . ID

    ID  shift, and go to state 61


State 20

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   30    | LPAREN exp . RPAREN
   71 seq: exp . SEMICOLON seq_exps

    SEMICOLON  shift, and go to state 62
    RPAREN     shift, and go to state 63
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49


State 21

   19 exp: LPAREN seq . RPAREN

    RPAREN  shift, and go to state 64


State 22

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | MINUS exp .
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 17 (exp)


State 23

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | IF exp . THEN exp ELSE exp
   22    | IF exp . THEN exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    THEN    shift, and go to state 65


State 24

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   25    | WHILE exp . DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 66


State 25

   26 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 67


State 26

   58 fundec_one: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   59           | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 68


State 27

   62 vardec: VAR . ID ASSIGN exp
   63       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 69


State 28

   50 tydec_one: TYPE . ID EQ ty

    ID  shift, and go to state 70


State 29

   67 nonempty_decs_s: tydec .

    $default  reduce using rule 67 (nonempty_decs_s)


State 30

   48 tydec: tydec_one .
   49      | tydec_one . tydec

    TYPE  shift, and go to state 28

    TYPE      [reduce using rule 48 (tydec)]
    $default  reduce using rule 48 (tydec)

    tydec      go to state 71
    tydec_one  go to state 30


State 31

   69 nonempty_decs_s: fundec .

    $default  reduce using rule 69 (nonempty_decs_s)


State 32

   56 fundec: fundec_one .
   57       | fundec_one . fundec

    FUNCTION  shift, and go to state 26

    FUNCTION  [reduce using rule 56 (fundec)]
    $default  reduce using rule 56 (fundec)

    fundec      go to state 72
    fundec_one  go to state 32


State 33

   68 nonempty_decs_s: vardec .

    $default  reduce using rule 68 (nonempty_decs_s)


State 34

   28 exp: LET decs . IN expseq END

    IN  shift, and go to state 73


State 35

   65 decs: nonempty_decs .

    $default  reduce using rule 65 (decs)


State 36

   66 nonempty_decs: nonempty_decs_s . decs

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 64 (decs)

    tydec            go to state 29
    tydec_one        go to state 30
    fundec           go to state 31
    fundec_one       go to state 32
    vardec           go to state 33
    decs             go to state 74
    nonempty_decs    go to state 35
    nonempty_decs_s  go to state 36


State 37

    0 $accept: program $end .

    $default  accept


State 38

    7 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14
    single  go to state 15


State 39

    8 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 76
    lvalue  go to state 14
    single  go to state 15


State 40

    9 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    lvalue  go to state 14
    single  go to state 15


State 41

   10 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 78
    lvalue  go to state 14
    single  go to state 15


State 42

   11 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 79
    lvalue  go to state 14
    single  go to state 15


State 43

   12 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 80
    lvalue  go to state 14
    single  go to state 15


State 44

   13 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 81
    lvalue  go to state 14
    single  go to state 15


State 45

   14 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 82
    lvalue  go to state 14
    single  go to state 15


State 46

   15 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 83
    lvalue  go to state 14
    single  go to state 15


State 47

   16 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 84
    lvalue  go to state 14
    single  go to state 15


State 48

   23 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 85
    lvalue  go to state 14
    single  go to state 15


State 49

   24 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 86
    lvalue  go to state 14
    single  go to state 15


State 50

   33 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 87
    lvalue  go to state 14
    single  go to state 15


State 51

   32 lvalue: lvalue DOT . ID

    ID  shift, and go to state 88


State 52

   20 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 89
    lvalue  go to state 14
    single  go to state 15


State 53

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   46 nonempty_args: exp .
   47              | exp . COMMA nonempty_args

    COMMA   shift, and go to state 90
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 46 (nonempty_args)


State 54

    6 exp: ID LPAREN actuals . RPAREN

    RPAREN  shift, and go to state 91


State 55

   45 actuals: nonempty_args .

    $default  reduce using rule 45 (actuals)


State 56

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   29    | ID LBRACK exp . RBRACK OF exp
   43 single: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 92
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


State 57

   38 rec_one: ID . EQ exp

    EQ  shift, and go to state 93


State 58

   18 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 94


State 59

   35 rec: nonempty_rec .

    $default  reduce using rule 35 (rec)


State 60

   36 nonempty_rec: rec_one .
   37             | rec_one . COMMA nonempty_rec

    COMMA  shift, and go to state 95

    $default  reduce using rule 36 (nonempty_rec)


State 61

   42 single: ID DOT ID .

    $default  reduce using rule 42 (single)


State 62

   71 seq: exp SEMICOLON . seq_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp       go to state 96
    lvalue    go to state 14
    single    go to state 15
    seq_exps  go to state 97


State 63

   30 exp: LPAREN exp RPAREN .

    $default  reduce using rule 30 (exp)


State 64

   19 exp: LPAREN seq RPAREN .

    $default  reduce using rule 19 (exp)


State 65

   21 exp: IF exp THEN . exp ELSE exp
   22    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 98
    lvalue  go to state 14
    single  go to state 15


State 66

   25 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 99
    lvalue  go to state 14
    single  go to state 15


State 67

   26 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 100
    lvalue  go to state 14
    single  go to state 15


State 68

   58 fundec_one: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   59           | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 101


State 69

   62 vardec: VAR ID . ASSIGN exp
   63       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 102
    ASSIGN  shift, and go to state 103


State 70

   50 tydec_one: TYPE ID . EQ ty

    EQ  shift, and go to state 104


State 71

   49 tydec: tydec_one tydec .

    $default  reduce using rule 49 (tydec)


State 72

   57 fundec: fundec_one fundec .

    $default  reduce using rule 57 (fundec)


State 73

   28 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 39 (expseq)

    exp       go to state 96
    lvalue    go to state 14
    expseq    go to state 105
    single    go to state 15
    seq_exps  go to state 106


State 74

   66 nonempty_decs: nonempty_decs_s decs .

    $default  reduce using rule 66 (nonempty_decs)


State 75

    7 exp: exp . PLUS exp
    7    | exp PLUS exp .
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 7 (exp)


State 76

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    8    | exp MINUS exp .
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 8 (exp)


State 77

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
    9    | exp TIMES exp .
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 9 (exp)


State 78

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   10    | exp DIVIDE exp .
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    $default  reduce using rule 10 (exp)


State 79

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   11    | exp EQ exp .
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 11 (exp)


State 80

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   12    | exp NEQ exp .
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 12 (exp)


State 81

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   13    | exp LT exp .
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 13 (exp)


State 82

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   14    | exp LE exp .
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


State 83

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   15    | exp GT exp .
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


State 84

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   16    | exp GE exp .
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 85

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   23    | exp AND exp .
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47

    $default  reduce using rule 23 (exp)


State 86

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   24    | exp OR exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48

    $default  reduce using rule 24 (exp)


State 87

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   33 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 107
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


State 88

   32 lvalue: lvalue DOT ID .

    $default  reduce using rule 32 (lvalue)


State 89

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   20    | lvalue ASSIGN exp .
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 20 (exp)


State 90

   47 nonempty_args: exp COMMA . nonempty_args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 53
    lvalue         go to state 14
    single         go to state 15
    nonempty_args  go to state 108


State 91

    6 exp: ID LPAREN actuals RPAREN .

    $default  reduce using rule 6 (exp)


State 92

   29 exp: ID LBRACK exp RBRACK . OF exp
   43 single: ID LBRACK exp RBRACK .

    OF  shift, and go to state 109

    $default  reduce using rule 43 (single)


State 93

   38 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 110
    lvalue  go to state 14
    single  go to state 15


State 94

   18 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 18 (exp)


State 95

   37 nonempty_rec: rec_one COMMA . nonempty_rec

    ID  shift, and go to state 57

    nonempty_rec  go to state 111
    rec_one       go to state 60


State 96

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   72 seq_exps: exp .
   73         | exp . SEMICOLON seq_exps

    SEMICOLON  shift, and go to state 112
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49

    $default  reduce using rule 72 (seq_exps)


State 97

   71 seq: exp SEMICOLON seq_exps .

    $default  reduce using rule 71 (seq)


State 98

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | IF exp THEN exp . ELSE exp
   22    | IF exp THEN exp .
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    ELSE    shift, and go to state 113

    PLUS      [reduce using rule 22 (exp)]
    MINUS     [reduce using rule 22 (exp)]
    TIMES     [reduce using rule 22 (exp)]
    DIVIDE    [reduce using rule 22 (exp)]
    EQ        [reduce using rule 22 (exp)]
    NEQ       [reduce using rule 22 (exp)]
    LT        [reduce using rule 22 (exp)]
    LE        [reduce using rule 22 (exp)]
    GT        [reduce using rule 22 (exp)]
    GE        [reduce using rule 22 (exp)]
    AND       [reduce using rule 22 (exp)]
    OR        [reduce using rule 22 (exp)]
    ELSE      [reduce using rule 22 (exp)]
    $default  reduce using rule 22 (exp)


State 99

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   25    | WHILE exp DO exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    LE        [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    GE        [reduce using rule 25 (exp)]
    AND       [reduce using rule 25 (exp)]
    OR        [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 100

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   26    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    TO      shift, and go to state 114


State 101

   58 fundec_one: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   59           | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 115

    $default  reduce using rule 54 (tyfields)

    tyfields           go to state 116
    nonempty_tyfields  go to state 117


State 102

   63 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 118


State 103

   62 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 119
    lvalue  go to state 14
    single  go to state 15


State 104

   50 tydec_one: TYPE ID EQ . ty

    ID      shift, and go to state 120
    LBRACE  shift, and go to state 121
    ARRAY   shift, and go to state 122

    ty  go to state 123


State 105

   28 exp: LET decs IN expseq . END

    END  shift, and go to state 124


State 106

   40 expseq: seq_exps .

    $default  reduce using rule 40 (expseq)


State 107

   33 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 33 (lvalue)


State 108

   47 nonempty_args: exp COMMA nonempty_args .

    $default  reduce using rule 47 (nonempty_args)


State 109

   29 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 125
    lvalue  go to state 14
    single  go to state 15


State 110

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   38 rec_one: ID EQ exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 38 (rec_one)


State 111

   37 nonempty_rec: rec_one COMMA nonempty_rec .

    $default  reduce using rule 37 (nonempty_rec)


State 112

   73 seq_exps: exp SEMICOLON . seq_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp       go to state 96
    lvalue    go to state 14
    single    go to state 15
    seq_exps  go to state 126


State 113

   21 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 127
    lvalue  go to state 14
    single  go to state 15


State 114

   26 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 128
    lvalue  go to state 14
    single  go to state 15


State 115

   60 nonempty_tyfields: ID . COLON ID
   61                  | ID . COLON ID COMMA nonempty_tyfields

    COLON  shift, and go to state 129


State 116

   58 fundec_one: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   59           | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 130


State 117

   55 tyfields: nonempty_tyfields .

    $default  reduce using rule 55 (tyfields)


State 118

   63 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 131


State 119

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   62 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 62 (vardec)


State 120

   51 ty: ID .

    $default  reduce using rule 51 (ty)


State 121

   52 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 115

    $default  reduce using rule 54 (tyfields)

    tyfields           go to state 132
    nonempty_tyfields  go to state 117


State 122

   53 ty: ARRAY . OF ID

    OF  shift, and go to state 133


State 123

   50 tydec_one: TYPE ID EQ ty .

    $default  reduce using rule 50 (tydec_one)


State 124

   28 exp: LET decs IN expseq END .

    $default  reduce using rule 28 (exp)


State 125

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   29    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 29 (exp)]
    MINUS     [reduce using rule 29 (exp)]
    TIMES     [reduce using rule 29 (exp)]
    DIVIDE    [reduce using rule 29 (exp)]
    EQ        [reduce using rule 29 (exp)]
    NEQ       [reduce using rule 29 (exp)]
    LT        [reduce using rule 29 (exp)]
    LE        [reduce using rule 29 (exp)]
    GT        [reduce using rule 29 (exp)]
    GE        [reduce using rule 29 (exp)]
    AND       [reduce using rule 29 (exp)]
    OR        [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)


State 126

   73 seq_exps: exp SEMICOLON seq_exps .

    $default  reduce using rule 73 (seq_exps)


State 127

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   21    | IF exp THEN exp ELSE exp .
   23    | exp . AND exp
   24    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 21 (exp)]
    MINUS     [reduce using rule 21 (exp)]
    TIMES     [reduce using rule 21 (exp)]
    DIVIDE    [reduce using rule 21 (exp)]
    EQ        [reduce using rule 21 (exp)]
    NEQ       [reduce using rule 21 (exp)]
    LT        [reduce using rule 21 (exp)]
    LE        [reduce using rule 21 (exp)]
    GT        [reduce using rule 21 (exp)]
    GE        [reduce using rule 21 (exp)]
    AND       [reduce using rule 21 (exp)]
    OR        [reduce using rule 21 (exp)]
    $default  reduce using rule 21 (exp)


State 128

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   26    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 134


State 129

   60 nonempty_tyfields: ID COLON . ID
   61                  | ID COLON . ID COMMA nonempty_tyfields

    ID  shift, and go to state 135


State 130

   58 fundec_one: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   59           | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 136
    EQ     shift, and go to state 137


State 131

   63 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 138
    lvalue  go to state 14
    single  go to state 15


State 132

   52 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 139


State 133

   53 ty: ARRAY OF . ID

    ID  shift, and go to state 140


State 134

   26 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 141
    lvalue  go to state 14
    single  go to state 15


State 135

   60 nonempty_tyfields: ID COLON ID .
   61                  | ID COLON ID . COMMA nonempty_tyfields

    COMMA  shift, and go to state 142

    $default  reduce using rule 60 (nonempty_tyfields)


State 136

   59 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 143


State 137

   58 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 144
    lvalue  go to state 14
    single  go to state 15


State 138

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   63 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 63 (vardec)


State 139

   52 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 52 (ty)


State 140

   53 ty: ARRAY OF ID .

    $default  reduce using rule 53 (ty)


State 141

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   26    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    PLUS      [reduce using rule 26 (exp)]
    MINUS     [reduce using rule 26 (exp)]
    TIMES     [reduce using rule 26 (exp)]
    DIVIDE    [reduce using rule 26 (exp)]
    EQ        [reduce using rule 26 (exp)]
    NEQ       [reduce using rule 26 (exp)]
    LT        [reduce using rule 26 (exp)]
    LE        [reduce using rule 26 (exp)]
    GT        [reduce using rule 26 (exp)]
    GE        [reduce using rule 26 (exp)]
    AND       [reduce using rule 26 (exp)]
    OR        [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


State 142

   61 nonempty_tyfields: ID COLON ID COMMA . nonempty_tyfields

    ID  shift, and go to state 115

    nonempty_tyfields  go to state 145


State 143

   59 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 146


State 144

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   58 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 58 (fundec_one)


State 145

   61 nonempty_tyfields: ID COLON ID COMMA nonempty_tyfields .

    $default  reduce using rule 61 (nonempty_tyfields)


State 146

   59 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 147
    lvalue  go to state 14
    single  go to state 15


State 147

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   23    | exp . AND exp
   24    | exp . OR exp
   59 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 59 (fundec_one)
